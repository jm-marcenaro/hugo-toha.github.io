<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GEE on Juan's Blog</title><link>https://hugo-toha.github.io/posts/gee/</link><description>Recent content in GEE on Juan's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 02 Sep 2024 08:06:25 +0600</lastBuildDate><atom:link href="https://hugo-toha.github.io/posts/gee/index.xml" rel="self" type="application/rss+xml"/><item><title>GEE Python API: NDVI, precipitation and real evapotranspiration</title><link>https://hugo-toha.github.io/posts/gee/ndvi-ppt-etr/ndvi-ppt-etr_1/</link><pubDate>Mon, 02 Sep 2024 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/gee/ndvi-ppt-etr/ndvi-ppt-etr_1/</guid><description>&lt;h3 id="project-overview">Project Overview&lt;/h3>
&lt;p>In this post, we&amp;rsquo;ll explore the correlation between multiple environmental data variables using the Google Earth Engine (GEE) Python API. Specifically, we&amp;rsquo;ll analyze yearly aggregated Normalized Difference Vegetation Index (NDVI), precipitation, and real evapotranspiration (ETr) over a region of interest spanning approximately 5,000 km² and over a five-year period (2019-2023).&lt;/p>
&lt;ul>
&lt;li>NDVI data will be extracted from the Sentinel-2 satellites.&lt;/li>
&lt;li>Precipitation data will be sourced from the CHIRPS dataset.&lt;/li>
&lt;li>Real evapotranspiration (ETr) data will be obtained from the MODIS satellite.&lt;/li>
&lt;/ul>
&lt;p>To make this project reproducible, you can access all the code from my &lt;a href="https://github.com/jm-marcenaro/GEE-Python-API-NDVI-PPT-ETR" target="_blank" rel="noopener">GitHub repository&lt;/a>. Feel free to check it out, try the code yourself, and leave comments or suggestions.&lt;/p></description></item><item><title>GEE Python API and CHIRPS: Analyzing precipitation in Buenos Aires - Part 2</title><link>https://hugo-toha.github.io/posts/gee/chirps/chirps_2/</link><pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate><guid>https://hugo-toha.github.io/posts/gee/chirps/chirps_2/</guid><description>&lt;h3 id="project-overview">Project Overview&lt;/h3>
&lt;p>In this post, we continue our exploration of the 2023 severe drought in Buenos Aires province, Argentina. In our previous post, we used the CHIRPS dataset to analyze the extent and impact of the drought. Now, we’ll take our analysis a step further by extracting time series data from specific coordinates within the affected region.&lt;/p>
&lt;p>To ensure that you can follow along and reproduce the results, all the code used in this analysis is available in my &lt;a href="https://github.com/jm-marcenaro/GEE-Python-API-CHIRPS" target="_blank" rel="noopener">GitHub repository&lt;/a>.&lt;/p></description></item><item><title>GEE Python API and CHIRPS: Analyzing precipitation in Buenos Aires - Part 1</title><link>https://hugo-toha.github.io/posts/gee/chirps/chirps_1/</link><pubDate>Tue, 30 Jul 2024 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/gee/chirps/chirps_1/</guid><description>&lt;h3 id="project-overview">Project Overview&lt;/h3>
&lt;p>Welcome back! In this post, we&amp;rsquo;ll delve into the severe drought that affected Buenos Aires Province in Argentina, in 2023, using the CHIRPS dataset and the Google Earth Engine (GEE) Python API.&lt;/p>
&lt;p>As detailed in the &lt;a href="https://developers.google.com/earth-engine/datasets/catalog/UCSB-CHG_CHIRPS_DAILY" target="_blank" rel="noopener">GEE catalog&lt;/a>, CHIRPS—short for Climate Hazards Group InfraRed Precipitation with Station data—is a 30+ year quasi-global rainfall dataset. This dataset integrates satellite imagery with in-situ station data at a 0.05° resolution to generate gridded rainfall at daily temporal resolution. This dataset is invaluable for trend analysis and seasonal drought monitoring.&lt;/p></description></item><item><title>GEE Python API and Precipitation Forecasting - Part 2</title><link>https://hugo-toha.github.io/posts/gee/gfs/gfs_2/</link><pubDate>Thu, 25 Jul 2024 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/gee/gfs/gfs_2/</guid><description>&lt;h3 id="project-overview">Project Overview&lt;/h3>
&lt;p>Hello again! Welcome to the continuation of our deep dive into precipitation forecasting using the GFS dataset and the GEE Python API. In our previous post, we demonstrated how to use the GEE Python API along with the XEE library (an integration of GEE and xarray) to forecast precipitation for specific coordinates. This time, we’re going to expand our analysis to cover an entire region. Besides, we&amp;rsquo;ll leverage additional libraries such as Geopandas and Cartopy to create comprehensive spatial maps of precipitation forecasts.&lt;/p></description></item><item><title>GEE Python API and Precipitation Forecasting - Part 1</title><link>https://hugo-toha.github.io/posts/gee/gfs/gfs_1/</link><pubDate>Mon, 15 Jul 2024 08:06:25 +0600</pubDate><guid>https://hugo-toha.github.io/posts/gee/gfs/gfs_1/</guid><description>&lt;h3 id="project-overview">Project Overview&lt;/h3>
&lt;p>Greetings! Welcome to the first part of a deep dive into Google Earth Engine (GEE) and its Python API. In this series, we&amp;rsquo;ll explore how to leverage the power of GEE for geospatial analysis, focusing on precipitation forecasting using the &lt;strong>Global Forecast System&lt;/strong> (GFS) dataset.&lt;/p>
&lt;p>GFS is a widely-used weather forecast model developed by NOAA. It provides comprehensive weather data, including temperature, wind, and precipitation forecasts, on a global scale. The model delivers forecasts up to 16 days into the future, making it an invaluable tool for a wide range of applications.&lt;/p></description></item></channel></rss>